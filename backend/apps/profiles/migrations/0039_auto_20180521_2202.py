# Generated by Django 2.0.4 on 2018-05-21 22:02
from django.contrib.contenttypes.models import ContentType
from django.db import migrations

from apps.lib.models import STREAMING


def add_streaming_subscriptions(apps, schema):
    User = apps.get_model('profiles', 'User')
    Subscription = apps.get_model('lib', 'Subscription')
    # Remove any broken subscriptions from previous iteration.
    Subscription.objects.filter(type=STREAMING).delete()
    # Need to use native model to force creation if it does not exist.
    content_type = ContentType.objects.get_for_model(User)
    for user in User.objects.all():
        for watching in user.watching.all():
            Subscription.objects.get_or_create(
                subscriber=user,
                content_type_id=content_type.id,
                object_id=watching.id,
                type=STREAMING
            )


class Migration(migrations.Migration):

    dependencies = [
        ('profiles', '0038_user_commission_info'),
    ]

    operations = [
        migrations.RunPython(add_streaming_subscriptions, reverse_code=lambda x, y: None)
    ]
