# Generated by Django 5.0.9 on 2024-09-18 14:26

import apps.profiles.models
import django.contrib.auth.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("profiles", "0147_staffpowers"),
    ]

    operations = [
        # Not sure why, but suddenly Django can't handle this in historical migrations,
        # so adding this index management manually. not 100% sure if the hex value in
        # this column is stable, but I imagine it should be since it would need to be
        # predictable by Django's ORM. If it's not, just check the DB to see what the
        # index is named.
        migrations.RunSQL(
            sql='DROP INDEX IF EXISTS "profiles_user_username_5357bba6_like"',
            reverse_sql='CREATE INDEX IF NOT EXISTS "profiles_user_username_5357bba6_like" ON "profiles_user" using btree (username varchar_pattern_ops)',
        ),
        migrations.AlterField(
            model_name="user",
            name="username",
            field=models.CharField(
                db_collation="case_insensitive",
                db_index=True,
                max_length=40,
                unique=True,
                validators=[
                    django.contrib.auth.validators.UnicodeUsernameValidator(),
                    apps.profiles.models.banned_named_validator,
                    apps.profiles.models.banned_prefix_validator,
                ],
            ),
        ),
    ]
