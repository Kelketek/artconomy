# portal
upstream web {
  server web:8002;
}
upstream npm {
  server web:8001;
}

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
  location ~* /[^/].+\.js$ {
    proxy_set_header Host localhost;
    proxy_pass http://npm;
  }
  location ~* .*\.hot-update\.json$ {
    proxy_set_header Host localhost;
    proxy_pass http://npm;
  }
  location /sockjs-node/ {
    proxy_set_header Host localhost;
    proxy_pass http://npm/sockjs-node/;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
  }
  location / {
    proxy_set_header Host $host;
    proxy_pass http://web/;
  }
  listen 8000 ssl;
  ssl_certificate     /etc/nginx/dev_keys/crt.pem;
  ssl_certificate_key /etc/nginx/dev_keys/private.key;
  ssl_protocols TLSv1 SSLv3 TLSv1.2;

  # This list is from Mozilla's Cipher guide. You can find it here:
  # https://wiki.mozilla.org/Security/Server_Side_TLS
  # It's worth updating periodically.
  ssl_ciphers ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS;
  #use my preference list to determine encryption instead of clients
  ssl_prefer_server_ciphers on;
  # Use SSL sessions. This avoids running the full negotiation again.
  ssl_session_cache    shared:SSL:10m;
  ssl_session_timeout  10m;
  ssl on;
  client_max_body_size 16M;
  server_name artconomy.vulpinity.com artconomy.com www.artconomy.com localhost;
}
